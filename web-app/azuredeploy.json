{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "array",
      "defaultValue": [
        "absqwerty1",
        "absqwerty2",
        "absqwerty3"
      ],
      "metadata": {
        "description": "Sets the domain name prefix for the web app. The concatenation of the domain name and the regionalized DNS zone make up the full A record of the web app."
      },
      "maxLength": 15
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "ServicePlan",
      "metadata": {
        "description": "Sets the hosting plan name prefix for the web app. The concatenation of the service plan name and the region make up the full name of the plan."
      }
    },
    "hostingPlanSize": {
      "type": "string",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Set the hosting type for the web app service plan."
      }
    },
    "workerSize": {
      "type": "int",
      "minValue": 0,
      "maxValue": 2,
      "defaultValue": 0,
      "metadata": {
        "description": "Set the performance level of the service plan. Accepts values 0, 1 or 2."
      }
    },
    "numberOfWorkers": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "The number of web instances for the service plan. This value can be from 1 to 10."
      }
    },
    "environments": {
      "type": "array",
      "defaultValue": [
        "staging",
        "dev",
        "uat"
      ],
      "metadata": {
        "description": "Array with the names for each slot"
      },
      "maxLength":  19
    },
    "storageAccountName": {
      "type": "string",
      "minLength": "3",
      "maxLength": "24",
      "defaultValue": "GEN-UNIQUE",
      "metadata": {
        "description": "Enter a globally-unique name for the storage account. Must be between 3 and 24 characters long."
      }
    }
  },
  "variables": {
    "apiVersion": "2015-04-01",
    "trafficManagerApiVersion": "2015-04-28-preview",
    "storageAccountApiVersion": "2015-06-15",
    "applicationInsightsApiVersion": "2014-04-01",

    "storageAccountName": "[toLower(parameters('storageAccountName'))]",
    "storageAccountType": "Standard_LRS",

    "webAppName": "[concat(parameters('siteName'), '-', resourceGroup().location)]",
    "hostingPlanName": "[concat(parameters('hostingPlanName'), '-', resourcegroup().location)]",
    "applicationInsightsName": "[concat(parameters('siteName'), '-', resourcegroup().location)]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
    "siteProperties": {
      "phpVersion": "5.5",
      "netFrameworkVersion": "v4.0",
      "use32BitWorkerProcess": false,
      "webSocketsEnabled": true,
      "alwaysOn": true,
      "requestTracingEnabled": true,
      "httpLoggingEnabled": true,
      "logsDirectorySizeLimit": 40,
      "detailedErrorLoggingEnabled": true,
      "remoteDebuggingEnabled": false,
      "remoteDebuggingVersion": "VS2013",

      "defaultDocuments": [
        "Default.htm",
        "Default.html",
        "Default.asp",
        "index.htm",
        "index.html",
        "iisstart.htm",
        "default.aspx",
        "index.php",
        "hostingstart.html"
      ]
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('storageAccountApiVersion')]",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Storage/storageAccounts",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverFarms",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "sku": "[parameters('hostingPlanSize')]",
        "workerSize": "[parameters('workerSize')]",
        "numberOfWorkers": "[parameters('numberOfWorkers')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "eastus2",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[parameters('hostingPlanName')]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": "[variables('siteProperties')]"
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "clientUrl": "[concat('http://', reference(resourceId('Microsoft.Web/Sites', parameters('siteName'))).hostNames[0])]"
          }
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "name": "slotconfignames",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "appSettingNames": [
              "clientUrl",
              "PROJECT",
              "Environment"
            ],
            "connectionStringNames": [
              "MultiChannelToDoContext"
            ]
          }
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "name": "logs",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]"
          ],
          "properties": {
            "applicationLogs": {
              "fileSystem": {
                "level": "Error"
              },
              "azureTableStorage": {
                "level": "Off",
                "sasUrl": null
              },
              "azureBlobStorage": {
                "level": "Error",
                "retentionInDays": 90
              }
            },
            "httpLogs": {
              "fileSystem": {
                "retentionInMb": 40,
                "retentionInDays": 90,
                "enabled": true
              },
              "azureBlobStorage": {
                "sasUrl": null,
                "retentionInDays": 90,
                "enabled": false
              }
            },
            "failedRequestsTracing": {
              "enabled": true
            },
            "detailedErrorMessages": {
              "enabled": true
            }
          }
        }

      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(parameters('siteName'), '/', parameters('environments')[copyIndex()])]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app slots.",
      "tags": {
        "displayName": "WebAppSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
      ],
      "copy": {
        "name": "webPortalSlot",
        "count": "[length(parameters('environments'))]"
      }
    }
  ],
  "outputs": {
      "siteUri": {
        "type": "string",
        "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0])]"
      },
      "keyString": {
        "type": "string",
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',concat(listKeys(variables('storageAccountId'),'2015-05-01-preview').key1))]"
      },
      "Key": {
        "type": "string",
        "value": "[listKeys(variables('storageAccountId'),'2015-05-01-preview').key1]"
      }
    }
}